package skyglass.composer.messaging.kafka.spring.basic.consumer;

import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.context.annotation.Bean;

import skyglass.composer.messaging.kafka.basic.consumer.EventuateKafkaConsumerConfigurationProperties;

@EnableConfigurationProperties(EventuateKafkaConsumerSpringConfigurationProperties.class)
public class EventuateKafkaConsumerSpringConfigurationPropertiesConfiguration {

	@Bean
	public EventuateKafkaConsumerConfigurationProperties eventuateKafkaConsumerConfigurationProperties(
			EventuateKafkaConsumerSpringConfigurationProperties eventuateKafkaConsumerSpringConfigurationProperties) {
		EventuateKafkaConsumerConfigurationProperties eventuateKafkaConsumerConfigurationProperties = new EventuateKafkaConsumerConfigurationProperties(
				eventuateKafkaConsumerSpringConfigurationProperties.getProperties());
		eventuateKafkaConsumerConfigurationProperties.setBackPressure(eventuateKafkaConsumerSpringConfigurationProperties.getBackPressure());
		eventuateKafkaConsumerConfigurationProperties.setPollTimeout(eventuateKafkaConsumerSpringConfigurationProperties.getPollTimeout());
		return eventuateKafkaConsumerConfigurationProperties;

	}
}
